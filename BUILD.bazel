load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@buildifier_prebuilt//:rules.bzl", "buildifier")

# gazelle:lang go
# gazelle:build_file_name BUILD.bazel

# Only update and do not create new BUILDs
# gazelle:generation_mode update_only

# Go config
# gazelle:go_naming_convention import
# gazelle:go_naming_convention_external import

# Use the gazelle bazel modules instead of go.mod modules
# gazelle:resolve_regexp go github.com/bazelbuild/bazel-gazelle/(.*) @bazel_gazelle//$1:go_default_library
# gazelle:resolve_regexp go github.com/bazelbuild/rules_go/(.*) @io_bazel_rules_go//$1

# gazelle:resolve go github.com/bazelbuild/buildtools/build @com_github_bazelbuild_buildtools//build:go_default_library

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@bazel_gazelle//language/go:go_default_library",
    ],
)

gazelle(
    name = "gazelle",
    # extra_args = ["-index=lazy"],
    gazelle = ":gazelle_bin",
)

bzl_library(
    name = "gazelle_lib",
    srcs = ["gazelle.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@bazel_gazelle//:def"],
)

alias(
    name = "format",
    actual = "//tools/format",
)

buildifier(
    name = "buildifier",
    exclude_patterns = ["./.git/*"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier(
    name = "buildifier.check",
    exclude_patterns = ["./.git/*"],
    lint_mode = "warn",
    mode = "diff",
)
