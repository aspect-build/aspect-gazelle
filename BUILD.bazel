load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@gazelle//:def.bzl", "gazelle", "gazelle_binary")

# gazelle:lang go
# gazelle:build_file_name BUILD.bazel

# Go config
# gazelle:go_naming_convention import
# gazelle:go_naming_convention_external import

# Use the gazelle bazel modules instead of go.mod modules
# gazelle:resolve_regexp go github.com/bazelbuild/bazel-gazelle/(.*) @gazelle//$1
# gazelle:resolve_regexp go github.com/bazel-contrib/rules_python/gazelle/(.*) @rules_python_gazelle_plugin//$1
# gazelle:resolve_regexp go github.com/bazelbuild/rules_go/(.*) @rules_go//$1
# gazelle:resolve_regexp go github.com/EngFlow/gazelle_cc/(.*) @gazelle_cc//$1

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@gazelle//language/go:go_default_library",
    ],
)

gazelle(
    name = "gazelle",
    extra_args = ["-index=lazy"],
    gazelle = ":gazelle_bin",
)

gazelle(
    name = "gazelle.check",
    gazelle = ":gazelle_bin",
    mode = "diff",
)

bzl_library(
    name = "gazelle_lib",
    srcs = ["gazelle.bzl"],
    visibility = ["//visibility:public"],
    deps = ["@gazelle//:def"],
)

alias(
    name = "format",
    actual = "//tools/format",
)

buildifier(
    name = "buildifier",
    exclude_patterns = ["./.git/*"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier(
    name = "buildifier.check",
    exclude_patterns = ["./.git/*"],
    lint_mode = "warn",
    mode = "diff",
)
