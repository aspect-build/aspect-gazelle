// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.3
// source: workflows/ohno/diagnostic/diagnostic.proto

package diagnostic

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiagnosticType int32

const (
	DiagnosticType_GENERIC DiagnosticType = 0
	DiagnosticType_FILE    DiagnosticType = 1
	DiagnosticType_BAZEL   DiagnosticType = 2
)

// Enum value maps for DiagnosticType.
var (
	DiagnosticType_name = map[int32]string{
		0: "GENERIC",
		1: "FILE",
		2: "BAZEL",
	}
	DiagnosticType_value = map[string]int32{
		"GENERIC": 0,
		"FILE":    1,
		"BAZEL":   2,
	}
)

func (x DiagnosticType) Enum() *DiagnosticType {
	p := new(DiagnosticType)
	*p = x
	return p
}

func (x DiagnosticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiagnosticType) Descriptor() protoreflect.EnumDescriptor {
	return file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes[0].Descriptor()
}

func (DiagnosticType) Type() protoreflect.EnumType {
	return &file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes[0]
}

func (x DiagnosticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiagnosticType.Descriptor instead.
func (DiagnosticType) EnumDescriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{0}
}

type Severity int32

const (
	Severity_INFO    Severity = 0
	Severity_ADVICE  Severity = 2
	Severity_WARNING Severity = 3
	Severity_ERROR   Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "INFO",
		2: "ADVICE",
		3: "WARNING",
		4: "ERROR",
	}
	Severity_value = map[string]int32{
		"INFO":    0,
		"ADVICE":  2,
		"WARNING": 3,
		"ERROR":   4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes[1].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes[1]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{1}
}

type SourceContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceContent) Reset() {
	*x = SourceContent{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceContent) ProtoMessage() {}

func (x *SourceContent) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceContent.ProtoReflect.Descriptor instead.
func (*SourceContent) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{0}
}

func (x *SourceContent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SourceContent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SourceReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceReference) Reset() {
	*x = SourceReference{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceReference) ProtoMessage() {}

func (x *SourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceReference.ProtoReflect.Descriptor instead.
func (*SourceReference) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{1}
}

func (x *SourceReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Span struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int32                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Width         int32                  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span) Reset() {
	*x = Span{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{2}
}

func (x *Span) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Span) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Span) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ProcessOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	Exit          int32                  `protobuf:"varint,3,opt,name=exit,proto3" json:"exit,omitempty"`
	Baggage       map[string]string      `protobuf:"bytes,4,rep,name=baggage,proto3" json:"baggage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessOutput) Reset() {
	*x = ProcessOutput{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessOutput) ProtoMessage() {}

func (x *ProcessOutput) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessOutput.ProtoReflect.Descriptor instead.
func (*ProcessOutput) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessOutput) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ProcessOutput) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ProcessOutput) GetExit() int32 {
	if x != nil {
		return x.Exit
	}
	return 0
}

func (x *ProcessOutput) GetBaggage() map[string]string {
	if x != nil {
		return x.Baggage
	}
	return nil
}

type Diagnostic struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Message  string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Raw      string                 `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Code     string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Exit     int32                  `protobuf:"varint,4,opt,name=exit,proto3" json:"exit,omitempty"`
	Severity Severity               `protobuf:"varint,5,opt,name=severity,proto3,enum=ohno.Severity" json:"severity,omitempty"`
	Help     string                 `protobuf:"bytes,6,opt,name=help,proto3" json:"help,omitempty"`
	Url      string                 `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	Title    string                 `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	// Types that are valid to be assigned to Source:
	//
	//	*Diagnostic_SourceContent
	//	*Diagnostic_SourceRef
	Source        isDiagnostic_Source `protobuf_oneof:"source"`
	Spans         []*Span             `protobuf:"bytes,11,rep,name=spans,proto3" json:"spans,omitempty"`
	Output        *ProcessOutput      `protobuf:"bytes,12,opt,name=output,proto3" json:"output,omitempty"`
	Baggage       map[string]string   `protobuf:"bytes,13,rep,name=baggage,proto3" json:"baggage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Type          DiagnosticType      `protobuf:"varint,14,opt,name=type,proto3,enum=ohno.DiagnosticType" json:"type,omitempty"`
	Cause         *Diagnostic         `protobuf:"bytes,15,opt,name=cause,proto3" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Diagnostic) Reset() {
	*x = Diagnostic{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostic) ProtoMessage() {}

func (x *Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostic.ProtoReflect.Descriptor instead.
func (*Diagnostic) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{4}
}

func (x *Diagnostic) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Diagnostic) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Diagnostic) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Diagnostic) GetExit() int32 {
	if x != nil {
		return x.Exit
	}
	return 0
}

func (x *Diagnostic) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_INFO
}

func (x *Diagnostic) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Diagnostic) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Diagnostic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Diagnostic) GetSource() isDiagnostic_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Diagnostic) GetSourceContent() *SourceContent {
	if x != nil {
		if x, ok := x.Source.(*Diagnostic_SourceContent); ok {
			return x.SourceContent
		}
	}
	return nil
}

func (x *Diagnostic) GetSourceRef() *SourceReference {
	if x != nil {
		if x, ok := x.Source.(*Diagnostic_SourceRef); ok {
			return x.SourceRef
		}
	}
	return nil
}

func (x *Diagnostic) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

func (x *Diagnostic) GetOutput() *ProcessOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *Diagnostic) GetBaggage() map[string]string {
	if x != nil {
		return x.Baggage
	}
	return nil
}

func (x *Diagnostic) GetType() DiagnosticType {
	if x != nil {
		return x.Type
	}
	return DiagnosticType_GENERIC
}

func (x *Diagnostic) GetCause() *Diagnostic {
	if x != nil {
		return x.Cause
	}
	return nil
}

type isDiagnostic_Source interface {
	isDiagnostic_Source()
}

type Diagnostic_SourceContent struct {
	SourceContent *SourceContent `protobuf:"bytes,9,opt,name=source_content,json=sourceContent,proto3,oneof"`
}

type Diagnostic_SourceRef struct {
	SourceRef *SourceReference `protobuf:"bytes,10,opt,name=source_ref,json=sourceRef,proto3,oneof"`
}

func (*Diagnostic_SourceContent) isDiagnostic_Source() {}

func (*Diagnostic_SourceRef) isDiagnostic_Source() {}

type Diagnostics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diagnostics   []*Diagnostic          `protobuf:"bytes,1,rep,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Diagnostics) Reset() {
	*x = Diagnostics{}
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Diagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diagnostics) ProtoMessage() {}

func (x *Diagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diagnostics.ProtoReflect.Descriptor instead.
func (*Diagnostics) Descriptor() ([]byte, []int) {
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP(), []int{5}
}

func (x *Diagnostics) GetDiagnostics() []*Diagnostic {
	if x != nil {
		return x.Diagnostics
	}
	return nil
}

var File_workflows_ohno_diagnostic_diagnostic_proto protoreflect.FileDescriptor

const file_workflows_ohno_diagnostic_diagnostic_proto_rawDesc = "" +
	"\n" +
	"*workflows/ohno/diagnostic/diagnostic.proto\x12\x04ohno\"=\n" +
	"\rSourceContent\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"%\n" +
	"\x0fSourceReference\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"L\n" +
	"\x04Span\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x05R\x06height\"\xcb\x01\n" +
	"\rProcessOutput\x12\x16\n" +
	"\x06stdout\x18\x01 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x02 \x01(\tR\x06stderr\x12\x12\n" +
	"\x04exit\x18\x03 \x01(\x05R\x04exit\x12:\n" +
	"\abaggage\x18\x04 \x03(\v2 .ohno.ProcessOutput.BaggageEntryR\abaggage\x1a:\n" +
	"\fBaggageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x04\n" +
	"\n" +
	"Diagnostic\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x10\n" +
	"\x03raw\x18\x02 \x01(\tR\x03raw\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x12\n" +
	"\x04exit\x18\x04 \x01(\x05R\x04exit\x12*\n" +
	"\bseverity\x18\x05 \x01(\x0e2\x0e.ohno.SeverityR\bseverity\x12\x12\n" +
	"\x04help\x18\x06 \x01(\tR\x04help\x12\x10\n" +
	"\x03url\x18\a \x01(\tR\x03url\x12\x14\n" +
	"\x05title\x18\b \x01(\tR\x05title\x12<\n" +
	"\x0esource_content\x18\t \x01(\v2\x13.ohno.SourceContentH\x00R\rsourceContent\x126\n" +
	"\n" +
	"source_ref\x18\n" +
	" \x01(\v2\x15.ohno.SourceReferenceH\x00R\tsourceRef\x12 \n" +
	"\x05spans\x18\v \x03(\v2\n" +
	".ohno.SpanR\x05spans\x12+\n" +
	"\x06output\x18\f \x01(\v2\x13.ohno.ProcessOutputR\x06output\x127\n" +
	"\abaggage\x18\r \x03(\v2\x1d.ohno.Diagnostic.BaggageEntryR\abaggage\x12(\n" +
	"\x04type\x18\x0e \x01(\x0e2\x14.ohno.DiagnosticTypeR\x04type\x12&\n" +
	"\x05cause\x18\x0f \x01(\v2\x10.ohno.DiagnosticR\x05cause\x1a:\n" +
	"\fBaggageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\b\n" +
	"\x06source\"A\n" +
	"\vDiagnostics\x122\n" +
	"\vdiagnostics\x18\x01 \x03(\v2\x10.ohno.DiagnosticR\vdiagnostics*2\n" +
	"\x0eDiagnosticType\x12\v\n" +
	"\aGENERIC\x10\x00\x12\b\n" +
	"\x04FILE\x10\x01\x12\t\n" +
	"\x05BAZEL\x10\x02*8\n" +
	"\bSeverity\x12\b\n" +
	"\x04INFO\x10\x00\x12\n" +
	"\n" +
	"\x06ADVICE\x10\x02\x12\v\n" +
	"\aWARNING\x10\x03\x12\t\n" +
	"\x05ERROR\x10\x04b\x06proto3"

var (
	file_workflows_ohno_diagnostic_diagnostic_proto_rawDescOnce sync.Once
	file_workflows_ohno_diagnostic_diagnostic_proto_rawDescData []byte
)

func file_workflows_ohno_diagnostic_diagnostic_proto_rawDescGZIP() []byte {
	file_workflows_ohno_diagnostic_diagnostic_proto_rawDescOnce.Do(func() {
		file_workflows_ohno_diagnostic_diagnostic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_workflows_ohno_diagnostic_diagnostic_proto_rawDesc), len(file_workflows_ohno_diagnostic_diagnostic_proto_rawDesc)))
	})
	return file_workflows_ohno_diagnostic_diagnostic_proto_rawDescData
}

var file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_workflows_ohno_diagnostic_diagnostic_proto_goTypes = []any{
	(DiagnosticType)(0),     // 0: ohno.DiagnosticType
	(Severity)(0),           // 1: ohno.Severity
	(*SourceContent)(nil),   // 2: ohno.SourceContent
	(*SourceReference)(nil), // 3: ohno.SourceReference
	(*Span)(nil),            // 4: ohno.Span
	(*ProcessOutput)(nil),   // 5: ohno.ProcessOutput
	(*Diagnostic)(nil),      // 6: ohno.Diagnostic
	(*Diagnostics)(nil),     // 7: ohno.Diagnostics
	nil,                     // 8: ohno.ProcessOutput.BaggageEntry
	nil,                     // 9: ohno.Diagnostic.BaggageEntry
}
var file_workflows_ohno_diagnostic_diagnostic_proto_depIdxs = []int32{
	8,  // 0: ohno.ProcessOutput.baggage:type_name -> ohno.ProcessOutput.BaggageEntry
	1,  // 1: ohno.Diagnostic.severity:type_name -> ohno.Severity
	2,  // 2: ohno.Diagnostic.source_content:type_name -> ohno.SourceContent
	3,  // 3: ohno.Diagnostic.source_ref:type_name -> ohno.SourceReference
	4,  // 4: ohno.Diagnostic.spans:type_name -> ohno.Span
	5,  // 5: ohno.Diagnostic.output:type_name -> ohno.ProcessOutput
	9,  // 6: ohno.Diagnostic.baggage:type_name -> ohno.Diagnostic.BaggageEntry
	0,  // 7: ohno.Diagnostic.type:type_name -> ohno.DiagnosticType
	6,  // 8: ohno.Diagnostic.cause:type_name -> ohno.Diagnostic
	6,  // 9: ohno.Diagnostics.diagnostics:type_name -> ohno.Diagnostic
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_workflows_ohno_diagnostic_diagnostic_proto_init() }
func file_workflows_ohno_diagnostic_diagnostic_proto_init() {
	if File_workflows_ohno_diagnostic_diagnostic_proto != nil {
		return
	}
	file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes[4].OneofWrappers = []any{
		(*Diagnostic_SourceContent)(nil),
		(*Diagnostic_SourceRef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_workflows_ohno_diagnostic_diagnostic_proto_rawDesc), len(file_workflows_ohno_diagnostic_diagnostic_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_workflows_ohno_diagnostic_diagnostic_proto_goTypes,
		DependencyIndexes: file_workflows_ohno_diagnostic_diagnostic_proto_depIdxs,
		EnumInfos:         file_workflows_ohno_diagnostic_diagnostic_proto_enumTypes,
		MessageInfos:      file_workflows_ohno_diagnostic_diagnostic_proto_msgTypes,
	}.Build()
	File_workflows_ohno_diagnostic_diagnostic_proto = out.File
	file_workflows_ohno_diagnostic_diagnostic_proto_goTypes = nil
	file_workflows_ohno_diagnostic_diagnostic_proto_depIdxs = nil
}
