load("@io_bazel_rules_go//go:def.bzl", "go_library", "nogo")

nogo(
    name = "nogo",
    config = "nogo.config.json",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_x_tools//go/analysis/passes/appends:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/asmdecl:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/assign:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/atomic:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/atomicalign:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/bools:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/buildssa:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/buildtag:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/composite:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/copylock:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/ctrlflow:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/deepequalerrors:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/defers:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/directive:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/errorsas:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/findcall:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/framepointer:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/gofix:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/hostport:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/httpmux:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/httpresponse:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/ifaceassert:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/inspect:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/loopclosure:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/lostcancel:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/nilfunc:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/nilness:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/pkgfact:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/printf:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/reflectvaluecompare:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/shift:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/sigchanyzer:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/slog:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/sortslice:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/stdmethods:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/stringintconv:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/structtag:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/testinggoroutine:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/tests:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/timeformat:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unmarshal:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unreachable:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unusedresult:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/unusedwrite:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/usesgenerics:go_default_library",
        "@org_golang_x_tools//go/analysis/passes/waitgroup:go_default_library",

        # TODO:
        # "@org_golang_x_tools//go/analysis/passes/fieldalignment:go_default_library",

        # Enabling this requires a number of refactors around `err` handling.
        # "@org_golang_x_tools//go/analysis/passes/shadow:go_default_library",

        # Enabling this requires upstream to resolve
        # https://github.com/bazelbuild/rules_go/issues/2396
        # "@org_golang_x_tools//go/analysis/passes/cgocall:go_default_library",
    ],
)

go_library(
    name = "go",
    srcs = ["tools.go"],
    importpath = "github.com/aspect-build/orion/bazel/go",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_google_genproto_googleapis_api//:api",
        "@org_golang_x_tools//go/analysis",
    ],
)
