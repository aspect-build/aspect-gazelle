load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_library", "go_test")

# gazelle:resolve_regexp go github.com/aspect-build/aspect-gazelle/common(/.*)? @aspect_gazelle//common$1
# gazelle:resolve_regexp go github.com/bazel-contrib/rules_jvm/(.*) @contrib_rules_jvm//$1

gazelle(
    name = "gazelle",
    extra_args = ["-index=lazy"],
    gazelle = "@aspect_gazelle//:gazelle_bin",
)

gazelle(
    name = "gazelle.check",
    gazelle = "@aspect_gazelle//:gazelle_bin",
    mode = "diff",
)

# Target name matching MODULE name
alias(
    name = "aspect_gazelle_kotlin",
    actual = ":kotlin",
    visibility = ["//visibility:public"],
)

go_library(
    name = "kotlin",
    srcs = [
        "configure.go",
        "generate.go",
        "imports.go",
        "kotlin.go",
        "language.go",
        "resolver.go",
    ],
    importpath = "github.com/aspect-build/aspect-gazelle/language/kotlin",
    visibility = ["//visibility:public"],
    deps = [
        "//kotlinconfig",
        "//parser",
        "@aspect_gazelle//common",
        "@aspect_gazelle//common/logger",
        "@aspect_gazelle//common/rule",
        "@com_github_emirpasic_gods//maps/treemap",
        "@com_github_emirpasic_gods//sets/treeset",
        "@com_github_emirpasic_gods//utils",
        "@com_github_rs_zerolog//:zerolog",
        "@contrib_rules_jvm//java/gazelle/javaconfig",
        "@contrib_rules_jvm//java/gazelle/private/java",
        "@contrib_rules_jvm//java/gazelle/private/maven",
        "@contrib_rules_jvm//java/gazelle/private/types",
        "@gazelle//config",
        "@gazelle//label",
        "@gazelle//language",
        "@gazelle//repo",
        "@gazelle//resolve",
        "@gazelle//rule",
    ],
)

go_test(
    name = "kotlin_test",
    srcs = ["kotlin_test.go"],
    embed = [":kotlin"],
)
